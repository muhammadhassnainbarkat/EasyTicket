services:
  reverse-proxy:
    image: traefik:v2.2
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - easy-ticket-network

  event-service:
    container_name: event-service
    build:
      context: ./event-service
      target: builder
    image: event-service
    env_file:
      - ".dev.env"
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.event.rule=Host(`easy.ticket.test`) && PathPrefix(`/api/event/`)"
    environment:
      - ENV=dev
#    volumes:
#      - ./event-service:/go/src/app
    develop:
      watch:
        - action: sync+restart
          path: ./event-service/
          target: /go/src/app
          ignore:
            - .gitignore
    command: sh -c "go run ./"
    networks:
      - easy-ticket-network

  easy-ticket-pg-db:
    container_name: easy-ticket-pg-db
    image: postgres:17.0
    env_file:
      - .dev.env
    volumes:
      - pg-easy-ticket-database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - easy-ticket-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5



networks:
  easy-ticket-network:
    driver: bridge


volumes:
  pg-easy-ticket-database:
    external: true




